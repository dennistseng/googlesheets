% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/consume-data.R
\name{get_via_csv}
\alias{get_via_csv}
\title{Get all data from a rectangular worksheet as a tbl_df or data.frame}
\usage{
get_via_csv(ss, ws = 1, ..., verbose = TRUE)
}
\arguments{
\item{ss}{a registered Google spreadsheet}

\item{ws}{positive integer or character string specifying index or title,
respectively, of the worksheet to consume}

\item{...}{further arguments to be passed to \code{\link{read.csv}} or,
  ultimately, \code{\link{read.table}}; note that \code{\link{read.csv}} is
  called with \code{stringsAsFactors = FALSE}, which is the blanket policy
  within \code{googlesheets} re: NOT converting character data to factor}

\item{verbose}{logical; do you want informative messages?}
}
\value{
a tbl_df
}
\description{
This function consumes data using the \code{exportcsv} links found in the
worksheets feed. Don't be spooked by the "csv" thing -- the data is NOT
actually written to file during this process. In fact, this is much, much
faster than consumption via the list feed. Unlike using the list feed, this
method does not assume that the populated cells form a neat rectangle. All
cells within the "data rectangle", i.e. spanned by the maximal row and column
extent of the data, are returned. Empty cells will be assigned NA. Also, the
header row, potentially containing column or variable names, is not
transformed/mangled, as it is via the list feed. If you want all of your
data, this is the fastest way to get it.
}
\examples{
\dontrun{
gap_ss <- gs_gap() # register the Gapminder example sheet
oceania_csv <- get_via_csv(gap_ss, ws = "Oceania")
str(oceania_csv)
oceania_csv
}
}
\seealso{
Other data.consumption.functions: \code{\link{get_cells}};
  \code{\link{get_col}}; \code{\link{get_row}};
  \code{\link{get_via_cf}}; \code{\link{get_via_lf}};
  \code{\link{reshape_cf}}; \code{\link{simplify_cf}}
}

