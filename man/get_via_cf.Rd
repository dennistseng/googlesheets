% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/consume-data.R
\name{get_via_cf}
\alias{get_via_cf}
\title{Create a data.frame of the non-empty cells in a rectangular region of a
worksheet}
\usage{
get_via_cf(ss, ws = 1, min_row = NULL, max_row = NULL, min_col = NULL,
  max_col = NULL, limits = NULL, return_empty = FALSE,
  return_links = FALSE, verbose = TRUE)
}
\arguments{
\item{ss}{a registered Google spreadsheet}

\item{ws}{positive integer or character string specifying index or title,
respectively, of the worksheet to consume}

\item{min_row}{positive integer, optional}

\item{max_row}{positive integer, optional}

\item{min_col}{positive integer, optional}

\item{max_col}{positive integer, optional}

\item{limits}{list, with named components holding the min and max for rows
and columns; intended primarily for internal use}

\item{return_empty}{logical; indicates whether to return empty cells}

\item{return_links}{logical; indicates whether to return the edit and self
  links (used internally in cell editing workflow)}

\item{verbose}{logical; do you want informative messages?}
}
\description{
This function consumes data via the cell feed, which, as the name suggests,
retrieves data cell by cell. No attempt is made here to shape the returned
data, but you can do that with \code{\link{reshape_cf}} and
\code{\link{simplify_cf}}). The output data.frame of \code{get_via_cf} will
have one row per cell.
}
\details{
Use the limits, e.g. min_row or max_col, to delineate the rectangular region
of interest. You can specify any subset of the limits or none at all. If
limits are provided, validity will be checked as well as internal consistency
and compliance with known extent of the worksheet. If no limits are provided,
all cells will be returned but realize that \code{\link{get_via_csv}} and
\code{\link{get_via_lf}} are much faster ways to consume data from a
rectangular worksheet.

Empty cells, even if "embedded" in a rectangular region of populated cells,
are not normally returned by the cell feed. This function won't return them
either when \code{return_empty = FALSE} (default), but will if you set
\code{return_empty = TRUE}. If you don't specify any limits AND you set
\code{return_empty = TRUE}, you could be in for several minutes wait, as the
feed will return all cells, which defaults to 1000 rows and 26 columns.
}
\examples{
\dontrun{
gap_ss <- gs_gap() # register the Gapminder example sheet
get_via_cf(gap_ss, "Asia", max_row = 4)
reshape_cf(get_via_cf(gap_ss, "Asia", max_row = 4))
reshape_cf(get_via_cf(gap_ss, "Asia",
                      limits = list(max_row = 4, min_col = 3)))
}
}
\seealso{
Other data.consumption.functions: \code{\link{get_cells}};
  \code{\link{get_col}}; \code{\link{get_row}};
  \code{\link{get_via_csv}}; \code{\link{get_via_lf}};
  \code{\link{reshape_cf}}; \code{\link{simplify_cf}}
}

